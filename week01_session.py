# -*- coding: utf-8 -*-
"""Week01_session

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12KIgkxrZn636AUK52SGETXIcYGn7DaOr

#### 21. Multiply a 5x3 matrix by a 3x2 matrix (real matrix product) (★☆☆)
"""

import numpy as np

matrix53=np.random.random((5,3))
matrix32=np.random.random((3,2))
print(np.dot(matrix53, matrix32))

"""#### 22. Given a 1D array, negate all elements which are between 3 and 8, in place. (★☆☆)"""

matrix1d=np.arange(11)
matrix1d[(3<matrix1d)&(matrix1d<8)] *= -1
print(matrix1d)

"""#### 23. What is the output of the following script? (★☆☆)
```python
# Author: Jake VanderPlas

print(sum(range(5),-1))
from numpy import *
print(sum(range(5),-1))
```

9     # -1+0+1+2+3+4

10    # 0+1+2+3+4

#### 24. Consider an integer vector Z, which of these expressions are legal? (★☆☆)
```python
Z**Z (O)
2 << Z >> 2 (O)
Z <- Z  (X)
1j*Z (O)
Z/1/1 (O)
Z<Z>Z (X)
```

#### 25. What are the result of the following expressions? (★☆☆)
```python
np.array(0) / np.array(0)
np.array(0) // np.array(0)
np.array([np.nan]).astype(int).astype(float)
```

nan

0

array[0]

#### 26. How to find common values between two arrays? (★☆☆)
```python
Z1 = np.random.randint(0,10,10)
Z2 = np.random.randint(0,10,10)
```
Hint : use `numpy.random.randint(start, end, size)`
"""

Z1 = np.random.randint(0,10,10)
Z2 = np.random.randint(0,10,10)
print(Z1, Z2)
print(np.intersect1d(Z1, Z2))

"""#### 27. Is the following expressions true? (★☆☆)
```python
np.sqrt(-1) == np.emath.sqrt(-1)
```
"""

np.sqrt(-1)==np.emath.sqrt(-1)
#False, np.sqrt(-1)은 nan이 나오고, np.emath.sqrt(-1)는 1j로 표현됨.

"""#### 28. How to get all the dates corresponding to the month of July 2016? (★★☆)
Hint : modify the code below
```python
Z = np.arange('start', 'end', dtype='datetime64[D]')
```
"""

Z=np.arange('2016-07', '2016-08', dtype='datetime64[D]')
print(Z)

"""#### 29. How to compute ((A+B)*(-A/2)) in place (without copy)? (★★☆)
Hint : use `numpy.add`, `numpy.divide`,`numpy.negative`, `numpy.multiply` and parameter `out` of the funtions
"""

A=float(input())
B=float(input())

sum=np.add(A, B)
negA=np.negative(A)
div=np.divide(negA, 2)
print(np.multiply(sum, div))

"""#### 30. Extract the integer part of a random array of positive numbers using 2 different methods (★★☆)
Hint : `%`, `//`
"""

a=np.random.uniform(0,10,10)
print(a)
print(a-a%1)
print(a//1)

"""#### 31. Create a 5x5 matrix with row values ranging from 0 to 4 (★★☆)"""

matrix55=np.random.uniform(0,4,25).reshape(5,5)
print(matrix55)

"""#### 32. Create a random vector of size 10 and sort it (★★☆)"""

random10=np.random.random(10)
print(np.sort(random10))

"""#### 33. Consider two random array A and B, check if they are equal (★★☆)
```python
A = np.random.randint(0,2,5)
B = np.random.randint(0,2,5)
```
Hint : Use `numpy.array_equal()`
"""

np.array_equal(A, B)

"""#### 34. Consider a random 10x2 matrix representing cartesian coordinates, convert them to polar coordinates (★★☆)
Hint 1 : Note that cartesian coodinate **(x, y)** can be represented as  polar coordinates **(distance from origin to (x,y), angle from the x-axis)**

Hint 2 : Use `numpy.sqrt` and `numpy.arctan2`
"""

random102=np.random.random((10,2))
x=random102[:,0]
y=random102[:,1]
distance=np.sqrt(x**2+y**2)
angle=np.arctan2(y,x)
print(distance)
print(angle)

"""#### 35. Create random vector Z of size 10 and replace the maximum value by 0 (★★☆)
Hint : We can see the index of maximum value using `Z.argmax()`
"""

z=np.random.random(10)
z[z.argmax()]=0
print(z)

"""#### 36. How to find the closest value (to a given scalar v) in a vector Z? (★★☆)
```python
Z = np.arange(100)
v = np.random.uniform(0,100)
```
Hint : Compute the distances between the each elements of Z and the scalar v. After that, we can see the index of minimum value using `argmin()`.  
"""

Z = np.arange(100)
v = np.random.uniform(0,100)
dis=np.abs(Z-v)
print(Z[np.argmin(dis)])

"""#### 37. What is the equivalent of enumerate for numpy arrays? (★★☆)
Hint : Use `numpy.ndenumerate()`or `numpy.ndindex()`

Example of the output :
```python
Z = np.arange(9).reshape(3,3)
```
```python
# output
(0, 0) 0
(0, 1) 1
(0, 2) 2
(1, 0) 3
(1, 1) 4
(1, 2) 5
(2, 0) 6
(2, 1) 7
(2, 2) 8
```
"""

Z = np.arange(9).reshape(3,3)

for index, value in np.ndenumerate(Z):
    print(index, value)

"""#### 38. How to randomly place p elements in a 2D array? (★★☆)
Hint : modify the code below
```python
n = 'size of a 2D array'
p = 'the number of elements that you want to place'
Z = np.zeros((n,n))
np.put(Z, np.random.choice(range(n*n), p, replace = False),'value that you want to place')
print(Z)
```
"""

n = 9
p = 8
Z = np.zeros((n,n))
np.put(Z, np.random.choice(range(n*n), p, replace = False), 3)
print(Z)

"""#### 39. How to sort an array below by the nth column? (★★☆)
```python
Z = np.random.randint(0,10,(3,3))
```
"""

Z = np.random.randint(0,10,(3,3))
print(Z)
print(Z[Z[:,0].argsort()])

# column 1

# column 2

# column 3